

найди недочеты, мне надо чтобы
как обработать ввод рисования через код godot gdscript, Я хочу чтобы при нажатии на экран как в паинте рисовалась линия, и потом хочу обрабюатывать эти линии чтобы было понятно в какую сторону рисуеться вектор
если бы это сразу обработывалось в коде было бы замечательно, но я все ещё хочу чтобы касание подсвечивалось трейлом который ввело по траектории движения нажатия, это новая логика и её надо как то внедрить не меняя старый код, только если немного и только если необходима, также я попрощу упростить его, мне все ещё нужно знать в каком из восьми направлений будет рисоваться верктор, и я бы хотел что бы после окончания рисования, этот вектор был обрисован 2д линией, но это не должно влиять на логику, просто подсвеченный вектор из одной начальной точки нажатия, в точку когда нажатие отпущено, у меня много мыслей как все это красиво упаковать, но не надо сильно менять логику уже существующую, и я хочу все делать из одного большого скрипта, поэтому тебе предеться хард кодить из одного скрипта.

я скинул код другого чат gpt, можешь сравнить ошибки между собой. и дополнить свой и так хороший код, просто посмотри может найдешь чтонибудь интересное


extends Node2D

var line : Line2D
var points : Array = []

func _ready():
    line = Line2D.new()
    add_child(line)
    line.default_color = Color(1, 0, 0)  # Цвет линии (красный)
    line.width = 2  # Ширина линии

func _input(event):
    if event is InputEventMouseButton:
        if event.pressed:
            points.append(event.position)
            line.points = points  # Обновляем точки линии
    elif event is InputEventMouseMotion:
        if Input.is_mouse_button_pressed(BUTTON_LEFT):
            points.append(event.position)
            line.points = points  # Обновляем точки линии

func get_direction_vector() -> Vector2:
    if points.size() < 2:
        return Vector2.ZERO
    return (points[points.size() - 1] - points[points.size() - 2]).normalized()
